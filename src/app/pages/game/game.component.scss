:host {
  --letter-size: 50px;
  --key-size: 40px;
  --key-font-size: 1.2em;

  #game {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    padding: 10px;

    .grid-container {
      display: grid;
      margin-top: 20px;

      grid-template-columns: repeat(var(--col-grid), var(--letter-size));
      grid-template-rows: repeat(6, var(--letter-size));

      .attempt {
        display: contents;
        text-transform: uppercase;

        .letter-container {
          border: 1px solid white;
          background-color: transparent;
          box-sizing: border-box;

          &.has-letter {
            border-color: #646464;
          }

          .letter {
            width: 100%;
            height: 100%;
            color: var(--text-color);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bolder;
            font-size: calc(1em + 1vw);
            position: relative;
            z-index: 3;
          }
        }
      }
    }

    .keyboard {
      display: grid;
      grid-template-columns: repeat(10, var(--key-size));
      grid-template-rows: repeat(3, 60px);
      grid-column-gap: 0.5rem;
      grid-row-gap: 1rem;
      place-content: center;
      width: 100%;

      .keyboard-line {
        display: contents;

        &:first-child {
          margin: 0;
        }

        .key {
          cursor: pointer;
          font-size: var(--key-font-size);
          font-weight: 700;
          color: var(--key-text-color);
          background: transparent;
          border: 1px solid white;
          border-radius: 4px;

          &.big {
            grid-column: var(--col-key) / span 2;
          }

          svg-icon {
            font-size: 1.1em;
          }
        }
      }
    }

    @media screen and (max-width: 576px) {
      --letter-size: 40px;
      --key-size: 35px;
      --key-font-size: 0.8em;
    }
  }
}

.correct {
  background-color: var(--correct-color) !important;
  @extend .letter-animation;
}

.absent {
  background-color: var(--absent-color) !important;
  @extend .letter-animation;

  &:is(button) {
    opacity: 0.6;
  }
}

.partial {
  background-color: var(--partial-color) !important;
  @extend .letter-animation;
}

@mixin transition($i) {
  @if ($i==1) {
    transition-delay: 0.15;
  }

  @if ($i==2) {
    transition-delay: 0.45;
  }

  @if ($i==3) {
    transition-delay: 0.75;
  }

  @if ($i==4) {
    transition-delay: 1.05;
  }

  @if ($i==5) {
    transition-delay: 1.35;
  }
}

.letter-animation {
  animation: flip-data;
  animation-duration: 0.5s;
  animation-timing-function: ease-in-out;
  animation-delay: 0s;
  animation-iteration-count: 1;
  animation-direction: normal;
  animation-fill-mode: forwards;
  animation-play-state: running;
  animation-name: flip-data;
  animation-duration: 0.5s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;

  @for $i from 1 to 5 {
    &.delay-#{$i} {
      @include transition($i);
    }
  }
}

@keyframes flip-data {
  0% {
    transform: rotateX(180deg);
  }

  100% {
    transform: rotateX(0deg);
  }
}
